version: 2.1

jobs:
  job_a:
    docker:
      - image: cimg/base:stable
    parameters:
      outcome:
        type: string
        default: "success"
        enum:
          - "success"
          - "failed"
          - "canceled"
    steps:
      - run:
          name: "Set outcome"
          command: |
            echo "Job A outcome: << parameters.outcome >>"
            if [ "<< parameters.outcome >>" == "success" ]; then
              echo "Job A completed successfully."
              exit 0
            elif [ "<< parameters.outcome >>" == "failed" ]; then
              echo "Job A failed."
              exit 1
            elif [ "<< parameters.outcome >>" == "canceled" ]; then
              echo "Job A is being canceled."
              # Simulate a canceled job by exiting with a specific code
              exit 2
            fi

  job_b:
    docker:
      - image: cimg/base:stable
    steps:
      - run: echo "Job B started because Job A succeeded or failed."

  job_c:
    docker:
      - image: cimg/base:stable
    steps:
      - run: echo "Job C started because Job A failed."

  job_d:
    docker:
      - image: cimg/base:stable
    steps:
      - run: echo "Job D started because Job A was canceled."

  job_e:
    docker:
      - image: cimg/base:stable
    steps:
      - run: echo "Job E started because Job A succeeded."

  job_f:
    docker:
      - image: cimg/base:stable
    steps:
      - run: echo "Job F started regardless of Job A's outcome."

workflows:
  test_requires_outcomes:
    jobs:
      - job_a:
          name: "Job A Success"
          outcome: "success"
      - job_b:
          requires:
            - "Job A Success": [success, failed]
      - job_c:
          requires:
            - "Job A Success": failed
      - job_d:
          requires:
            - "Job A Success": canceled
      - job_e:
          requires:
            - "Job A Success": success
      - job_f:
          requires:
            - "Job A Success": [success, failed, canceled]

      - job_a:
          name: "Job A Failed"
          outcome: "failed"
          continue-on-error: true
      - job_b:
          name: "Job B after A Failed"
          requires:
            - "Job A Failed": [success, failed]
      - job_c:
          name: "Job C after A Failed"
          requires:
            - "Job A Failed": failed
      - job_d:
          name: "Job D after A Failed"
          requires:
            - "Job A Failed": canceled
      - job_e:
          name: "Job E after A Failed"
          requires:
            - "Job A Failed": success
      - job_f:
          name: "Job F after A Failed"
          requires:
            - "Job A Failed": [success, failed, canceled]

      - job_a:
          name: "Job A Canceled"
          outcome: "canceled"
          continue-on-error: true
      - job_b:
          name: "Job B after A Canceled"
          requires:
            - "Job A Canceled": [success, failed]
      - job_c:
          name: "Job C after A Canceled"
          requires:
            - "Job A Canceled": failed
      - job_d:
          name: "Job D after A Canceled"
          requires:
            - "Job A Canceled": canceled
      - job_e:
          name: "Job E after A Canceled"
          requires:
            - "Job A Canceled": success
      - job_f:
          name: "Job F after A Canceled"
          requires:
            - "Job A Canceled": [success, failed, canceled]
